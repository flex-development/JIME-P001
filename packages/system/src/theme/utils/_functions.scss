/// ----------------------------------------------------------------------------
/// Functions
/// @group functions
/// ----------------------------------------------------------------------------

/// Clamp `$num` between `$min` and `$max`.
/// @link https://css-tricks.com/snippets/sass/clamping-number/
/// @param {Number} $num - Number to clamp
/// @param {Number} $min - Minimum value
/// @param {Number} $max - Maximum value
@function clamp($num, $min, $max) {
  @return min(max($num, $min), $max);
}

/// Converts a px value into an em value.
/// @param {Number} $value - Value to convert
/// @param {Number} $base [16px] - Base font size
@function em($value, $base: 16) {
  @return ($value / $base) * 1em;
}

/// Converts a px value into rem value.
/// @param {Number} $value - Value to convert
/// @param {Number} $base [16px] - Base font size
@function rem($value, $base: 16) {
  @return ($value / $base) * 1rem;
}

/// Removes the unit from a value and attaches the unit em, rem, or px.
/// @param {Number} $val - Value to strip
/// @param {String} $unit [em] - Unit to convert to
@function strip-convert($val, $unit: em) {
  @return #{strip-unit($val)}#{$unit};
}

/// Remove the unit of a length
/// @param {Number} $value - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($value) {
  @if type-of($value) == 'number' and not unitless($value) {
    @return $value / ($value * 0 + 1);
  }

  @return $value;
}
